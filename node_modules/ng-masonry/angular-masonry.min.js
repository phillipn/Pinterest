"use strict";angular.module("ngMasonry",[]).controller("masonryController",function(){function n(){return!!o.config&&!!o.config.masonryContainer}function r(){var n={itemSelector:o.config.masonryItem},r=o.config.masonryOption?angular.extend(n,o.config.masonryOption):n;o.container=new Masonry(o.config.masonryContainer,r),"undefined"!=typeof imagesLoaded&&new imagesLoaded(o.config.masonryContainer,function(){o.reLayout()})}function t(){o.container.layout()}var o=this;o.config={},o.container=void 0,o.ready=n,o.initialize=r,o.reLayout=t}).directive("masonry",function(){function n(n,r){var t=!1,o=angular.element(document.querySelectorAll("["+r.$attr.masonry+"] [data-masonry-item], ["+r.$attr.masonry+"] [masonry-item]"));return angular.forEach(o,function(n){n=angular.element(n),(void 0!==n.attr("ng-repeat")||void 0!==n.attr("data-ng-repeat"))&&(t=!0,n.attr("data-masonry-after-render",""))}),{pre:function(n,r,t,o){o.config.masonryContainer="["+t.$attr.masonry+"]",o.config.masonryOptions=JSON.parse(t.masonryOptions||"{}")},post:function(n,r,o,e){t||e.initialize()}}}var r={restrict:"A",controller:"masonryController",compile:n};return r}).directive("masonryItem",function(){function n(){return{pre:function(n,r,t,o){void 0===o.config.masonryItem&&(o.config.masonryItem="["+t.$attr.masonryItem+"]")}}}var r={restrict:"A",require:"^masonry",priority:1,compile:n};return r}).directive("masonryAfterRender",["$timeout",function(n){"ngInject";function r(r,t,o,e){if(r.$last){var i=null;i=n(function(){e.initialize(),n.cancel(i)})}}var t={restrict:"A",require:"^masonry",priority:0,link:r};return t}]);